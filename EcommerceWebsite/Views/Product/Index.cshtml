@using EcommerceWebsite.Models.Product
@model ProductIndexViewModel


@{
    ViewData["Title"] = "Products";
}

<style>
    
</style>

<h1>Products</h1>

<div class="page-container">
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="custom-alert">
            @TempData["SuccessMessage"]
        </div>
    }
    <!-- Sidebar Filters -->
    <aside class="filters">
        <h3>Filters</h3>
        <form method="get">
            <!-- Name Filter -->
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" value="@Model.ProductFilters.Name" />
            
            <!-- Description Filter -->
            <label for="description">Description:</label>
            <input type="text" id="description" name="description" value="@Model.ProductFilters.Description" />
            
            
            <label for="SortBy">Price:</label>
            <select id="SortBy" name="SortBy" asp-items="@(new SelectList(ProductFilterModel.GetSortOptions(), "Value", "Text", Model.ProductFilters.SortBy.ToString()))">
                <option value="NOSELECTEDVALUE">--</option>
            </select>


            <!-- Stock Availability Filter -->
            <label for="Stock">Stock Availability:</label>
            <select id="Stock" name="Stock" asp-items="@(new SelectList(ProductFilterModel.GetStockOptions(), "Value", "Text", Model.ProductFilters.Stock.ToString()))">
            </select>

            <!-- Apply Filters Button -->
            <button type="submit">Apply Filters</button>
        </form>
    </aside>

    <!-- Product List -->
    <section class="product-list">
        @foreach (var product in Model.Products)
        {
            <div class="product-item">
                <img src="@(product.ImageData != null
                              ? $"data:image/png;base64,{Convert.ToBase64String(product.ImageData.ToArray() as byte[])}"
                              : "/path/to/default.jpg")" alt="Product Image" class="product-image"/>
                <h2>@product.Name</h2>
                <p>@product.Description</p>
                <p>Price: @product.Price.ToString("C")</p>
                <p>Stock: @product.StockQuantity</p>
                @if (User.Identity is { IsAuthenticated: true })
                {
                    <div class="product-item-buttons">
                        <form class="add-to-cart-form" asp-controller="Cart" asp-action="AddToCart" method="post">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="productId" value="@product.ProductId"/>
                            <input type="number" name="quantity" value="1" class="quantity-input" min="1"/>
                            <button type="submit" class="buy-button">Add to cart</button>
                        </form>
                    </div>
                }
            </div>
        }
    </section>
</div>

<style>
    .page-container {
        display: flex;
        gap: 20px;
    }

    /* Sidebar Styles */
    .filters {
        width: 25%;
        border: 1px solid #ccc;
        padding: 15px;
        border-radius: 5px;
        box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.1);
        background-color: #f9f9f9;
    }

    .filters h3 {
        margin-bottom: 15px;
    }

    .filters label {
        display: block;
        margin-top: 10px;
    }
    .filters select,
    .filters button,
    .filters input[type="text"] {
        width: 100%;
        margin-top: 5px;
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    /* Product List Styles */
    .product-list {
        flex: 1;
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 20px;
    }

    .product-item {
        border: 1px solid #ccc;
        padding: 15px;
        border-radius: 5px;
        box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.1);
        background-color: #fff;
        transition: background-color 0.3s ease;

    }

    .product-item:hover {
        background-color: #e6e6e6;
    }

    .product-item h2 {
        font-size: 1.2em;
        margin-bottom: 10px;
    }

    .product-image {
        width: 100%;
        height: 200px; /* Set a fixed height */
        object-fit: cover; /* Ensure the image covers the area without distortion */
        border-radius: 5px;
        margin-bottom: 10px;
    }

    .product-item-buttons {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 10px;
        
    }

    .quantity-input {
        width: 60px;
        padding: 5px;
        border: 1px solid #ccc;
        border-radius: 5px;
    }
    
    .buy-button {
        background: #6896ff;
        border: 2px solid #5e71ff;
        border-radius: 5px;
        transition: background-color 0.3s ease;
        cursor: pointer;
    }
    
    .buy-button:hover {
        background: #5d69ff;
    }

    .custom-alert {
        position: fixed;
        top: 20px;
        left: 50%;
        transform: translateX(-50%);
        background-color: #d4edda;
        color: #155724;
        padding: 15px 25px;
        border: 1px solid #c3e6cb;
        border-radius: 5px;
        box-shadow: 0 2px 6px rgba(0,0,0,0.2);
        z-index: 1000;
        opacity: 1;
        transition: opacity 0.5s ease-out, top 0.5s ease-out;
    }

    .custom-alert.fade-out {
        opacity: 0;
        top: 0;
    }
    
</style>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const alertBox = document.querySelector('.custom-alert');
            if (alertBox) {
                // Fade out after 3 seconds
                setTimeout(() => {
                    alertBox.classList.add('fade-out');
                    // Remove from DOM after fade out transition
                    alertBox.addEventListener('transitionend', () => {
                        alertBox.remove();
                    });
                }, 3000);
            }
        });
    </script>
}

